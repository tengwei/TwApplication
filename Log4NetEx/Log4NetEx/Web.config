<?xml version="1.0" encoding="utf-8"?>
<!--
  有关如何配置 ASP.NET 应用程序的详细信息，请访问
  http://go.microsoft.com/fwlink/?LinkId=301880
  -->
<configuration>
  <configSections>
    <section name="log4net" type="System.Configuration.IgnoreSectionHandler" />
  </configSections>
  <connectionStrings>
    <add name="RedisExchangeHosts" connectionString="127.0.0.1:6379,allowadmin=true" />
  </connectionStrings>
  <appSettings>
    <add key="webpages:Version" value="3.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <!--<add key="redisKey" value="Demo:test:" />-->

  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
    <caching>
      <outputCache defaultProvider="MyRedisOutputCache">
        <providers>
          <!-- For more details check https://github.com/Azure/aspnet-redis-providers/wiki -->
          <!-- Either use 'connectionString' OR 'settingsClassName' and 'settingsMethodName' OR use 'host','port','accessKey','ssl','connectionTimeoutInMilliseconds' and 'operationTimeoutInMilliseconds'. -->
          <!-- 'databaseId' and 'applicationName' can be used with both options. -->
          <!--
          <add name="MyRedisOutputCache" 
            host = "127.0.0.1" [String]
            port = "" [number]
            accessKey = "" [String]
            ssl = "false" [true|false]
            databaseId = "0" [number]
            applicationName = "" [String]
            connectionTimeoutInMilliseconds = "5000" [number]
            operationTimeoutInMilliseconds = "1000" [number]
            connectionString = "<Valid StackExchange.Redis connection string>" [String]
            settingsClassName = "<Assembly qualified class name that contains settings method specified below. Which basically return 'connectionString' value>" [String]
            settingsMethodName = "<Settings method should be defined in settingsClass. It should be public, static, does not take any parameters and should have a return type of 'String', which is basically 'connectionString' value.>" [String]
            loggingClassName = "<Assembly qualified class name that contains logging method specified below>" [String]
            loggingMethodName = "<Logging method should be defined in loggingClass. It should be public, static, does not take any parameters and should have a return type of System.IO.TextWriter.>" [String]
            redisSerializerType = "<Assembly qualified class name that implements Microsoft.Web.Redis.ISerializer>" [String]
          />
          -->
          <add name="MyRedisOutputCache" type="Microsoft.Web.Redis.RedisOutputCacheProvider" host="127.0.0.1" accessKey="" ssl="false" />
        </providers>
      </outputCache>
    </caching>
    <sessionState mode="Custom" customProvider="MySessionStateStore">
      <providers>
        <!-- For more details check https://github.com/Azure/aspnet-redis-providers/wiki -->
        <!-- Either use 'connectionString' OR 'settingsClassName' and 'settingsMethodName' OR use 'host','port','accessKey','ssl','connectionTimeoutInMilliseconds' and 'operationTimeoutInMilliseconds'. -->
        <!-- 'throwOnError','retryTimeoutInMilliseconds','databaseId' and 'applicationName' can be used with both options. -->
        <!--
          <add name="MySessionStateStore" 
            host = "127.0.0.1" [String]
            port = "" [number]
            accessKey = "" [String]
            ssl = "false" [true|false]
            throwOnError = "true" [true|false]
            retryTimeoutInMilliseconds = "5000" [number]
            databaseId = "0" [number]
            applicationName = "" [String]
            connectionTimeoutInMilliseconds = "5000" [number]
            operationTimeoutInMilliseconds = "1000" [number]
            connectionString = "<Valid StackExchange.Redis connection string>" [String]
            settingsClassName = "<Assembly qualified class name that contains settings method specified below. Which basically return 'connectionString' value>" [String]
            settingsMethodName = "<Settings method should be defined in settingsClass. It should be public, static, does not take any parameters and should have a return type of 'String', which is basically 'connectionString' value.>" [String]
            loggingClassName = "<Assembly qualified class name that contains logging method specified below>" [String]
            loggingMethodName = "<Logging method should be defined in loggingClass. It should be public, static, does not take any parameters and should have a return type of System.IO.TextWriter.>" [String]
            redisSerializerType = "<Assembly qualified class name that implements Microsoft.Web.Redis.ISerializer>" [String]
          />
        -->
        <add name="MySessionStateStore" type="Microsoft.Web.Redis.RedisSessionStateProvider" host="127.0.0.1" accessKey="" ssl="false" />
      </providers>
    </sessionState>
  </system.web>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-5.0.0.0" newVersion="5.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Optimization" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="1.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-1.5.2.14234" newVersion="1.5.2.14234" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="StackExchange.Redis.StrongName" publicKeyToken="c219ff1ca8c2ce46" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.1.605.0" newVersion="1.1.605.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <log4net>
    <appender name="RollingFileAppenderDEBUG" type="log4net.Appender.RollingFileAppender">
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <file value=".\\logs\\" />
      <datePattern value="yyyyMMdd/yyyyMMdd-HH&quot;.DEBUG.log&quot;" />
      <appendToFile value="true" />
      <staticLogFileName value="false" />
      <rollingStyle value="Composite" />
      <maxSizeRollBackups value="50" />
      <maximumFileSize value="30MB" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%-5level %date 线程ID:[%thread]  %logger property:[%property{NDC}] - 描述：%message%newline%newline%newline" />
        <!--<param name="Header" value="[Header]&#xD;&#xA;" />
        <param name="Footer" value="[Footer]&#xD;&#xA;" />-->
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <!--Level级别：DEBUG <INFO<WARN<ERROR<FATAL-->
        <levelMin value="DEBUG" />
        <levelMax value="DEBUG" />
      </filter>
    </appender>
    <appender name="RollingFileAppenderINFO" type="log4net.Appender.RollingFileAppender">
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <file value=".\\logs\\" />
      <datePattern value="yyyyMMdd/yyyyMMdd&quot;.INFO.log&quot;" />
      <appendToFile value="true" />
      <staticLogFileName value="false" />
      <rollingStyle value="Composite" />
      <maxSizeRollBackups value="50" />
      <maximumFileSize value="30MB" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%-5level %date 线程ID:[%thread]  %logger property:[%property{NDC}] - 描述：%message%newline%newline%newline" />
        <!--<param name="Header" value="[Header]&#xD;&#xA;" />
        <param name="Footer" value="[Footer]&#xD;&#xA;" />-->
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <!--Level级别：DEBUG <INFO<WARN<ERROR<FATAL-->
        <levelMin value="INFO" />
        <levelMax value="INFO" />
      </filter>
    </appender>
    <appender name="RollingFileAppenderWARN" type="log4net.Appender.RollingFileAppender">
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <file value=".\\logs\\" />
      <datePattern value="yyyyMMdd/yyyyMMdd&quot;.WARN.log&quot;" />
      <appendToFile value="true" />
      <staticLogFileName value="false" />
      <rollingStyle value="Composite" />
      <maxSizeRollBackups value="50" />
      <maximumFileSize value="30MB" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%-5level %date 线程ID:[%thread]  %logger property:[%property{NDC}] - 描述：%message%newline%newline%newline" />
        <!--<param name="Header" value="[Header]&#xD;&#xA;" />
        <param name="Footer" value="[Footer]&#xD;&#xA;" />-->
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <!--Level级别：DEBUG <INFO<WARN<ERROR<FATAL-->
        <levelMin value="WARN" />
        <levelMax value="WARN" />
      </filter>
    </appender>
    <appender name="RollingFileAppenderERROR" type="log4net.Appender.RollingFileAppender">
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <file value=".\\logs\\" />
      <datePattern value="yyyyMMdd/yyyyMMdd&quot;.ERROR.log&quot;" />
      <appendToFile value="true" />
      <staticLogFileName value="false" />
      <rollingStyle value="Composite" />
      <maxSizeRollBackups value="50" />
      <maximumFileSize value="30MB" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%-5level %date 线程ID:[%thread]  %logger property:[%property{NDC}] - 描述：%message%newline%newline%newline" />
        <!--<param name="Header" value="[Header]&#xD;&#xA;" />
        <param name="Footer" value="[Footer]&#xD;&#xA;" />-->
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <!--Level级别：DEBUG <INFO<WARN<ERROR<FATAL-->
        <levelMin value="ERROR" />
        <levelMax value="ERROR" />
      </filter>
    </appender>
    <appender name="RollingFileAppenderFATAL" type="log4net.Appender.RollingFileAppender">
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <file value=".\\logs\\" />
      <datePattern value="yyyyMMdd/yyyyMMdd&quot;.FATAL.log&quot;" />
      <appendToFile value="true" />
      <staticLogFileName value="false" />
      <rollingStyle value="Composite" />
      <maxSizeRollBackups value="50" />
      <maximumFileSize value="30MB" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%-5level %date 线程ID:[%thread]  %logger property:[%property{NDC}] - 描述：%message%newline%newline%newline" />
        <!--<param name="Header" value="[Header]&#xD;&#xA;" />
        <param name="Footer" value="[Footer]&#xD;&#xA;" />-->
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <!--Level级别：DEBUG <INFO<WARN<ERROR<FATAL-->
        <levelMin value="FATAL" />
        <levelMax value="FATAL" />
      </filter>
    </appender>
    <root>
      <appender-ref ref="RollingFileAppenderDEBUG" />
      <!--<appender-ref ref="RollingFileAppenderINFO" />
      <appender-ref ref="RollingFileAppenderWARN" />-->
      <appender-ref ref="RollingFileAppenderERROR" />
      <!--<appender-ref ref="RollingFileAppenderFATAL" />-->
      <!--Level级别：DEBUG <INFO<WARN<ERROR<FATAL-->
      <level value="DEBUG" />
    </root>
  </log4net>
</configuration>
